CREATE SCHEMA IF NOT EXISTS jagent;

SET SCHEMA 'jagent';

DROP FUNCTION IF EXISTS update_timestamp();
CREATE FUNCTION update_timestamp() RETURNS trigger AS $update_timestamp$
    BEGIN
        NEW.modified_at := current_timestamp;
        RETURN NEW;
    END;
$update_timestamp$ LANGUAGE plpgsql;

DROP TABLE IF EXISTS RQ_STATUSES
CREATE TABLE RQ_STATUSES (
  ID SERIAL,
  STATUS VARCHAR(100) NOT NULL,
  MODIFIED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID));

DROP TABLE IF EXISTS JOBS;
CREATE TABLE JOBS (
  ID SERIAL,
  JOB_NAME VARCHAR(100) NOT NULL,
  MODIFIED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID));

DROP TABLE IF EXISTS RUNS;
CREATE TABLE RUNS (
  ID SERIAL,
  JOB_ID INT NULL,
  STATUS_ID INT NULL,
  PARAMETERS VARCHAR(255) NULL,
  MODIFIED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID));
CREATE TRIGGER update_timestamp_test_cases BEFORE INSERT OR UPDATE ON RUNS
    FOR EACH ROW EXECUTE PROCEDURE update_timestamp();